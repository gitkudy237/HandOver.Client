@page "/category/{id}"

@inject ItemsClient ItemsClient
@inject CategoriesClient CategoriesClient

<PageTitle>Categories</PageTitle>

<section class="main-content">
    <h2>@_category.Name</h2>
    <div class="item-container grid">
        @if (_categoryItems is null)
        {
            <p>Loading...</p>
        }
        else
        {

            if (_categoryItems.Count == 0)
            {
                <p>No items...</p>
            }
            else
            {
                
            foreach (var item in _categoryItems)
            {
                <article class="card">
                    <div class="card-header">
                        <img src=@item.ImageUrl
                             alt=@item.Name />
                    </div>
                    <div class="card-body flex">
                        <p class="price">@item.Price  FCFA</p>
                        <h3 class="card-title">
                            @item.Name
                        </h3>
                        <div class="item-category">
                            <span>@item.Category</span>
                        </div>
                        <div class="details">
                            <p class="location">
                                <i class="fa-solid fa-location-dot icon--primary"></i>
                                <span>@item.Location</span>
                            </p>
                            <p class="seller">
                                <i class="fa-solid fa-user icon--warning"></i><span>@item.Seller</span>
                            </p>
                        </div>
                    </div>
                </article>
            }
            }
        }
    </div>
</section>


@code {
    [Parameter]
    public string? Id { get; set; }

    private List<ItemSummary>? _categoryItems = new();
    private Category[]? _categories;
    private Category? _category;

    protected override void OnParametersSet()
    {
        _categoryItems = ItemsClient.GetItems(_category.Name);
    }

    protected override void OnInitialized()
    {
        if (Id is not null)
        {
            _categories = CategoriesClient.GetCategories();
            _category = _categories
                .FirstOrDefault(c => c.Name == Id.ToLower());
        }

        else
            return;
    }

}
