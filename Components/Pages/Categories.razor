@page "/category/{id:int}"

@inject ItemsClient ItemsClient
@inject CategoriesClient CategoriesClient

<PageTitle>Categories</PageTitle>

<section class="main-content">
    <div class="main-content-header">
        <h2>@_category?.Name</h2>
    </div>
    @if (_categoryItems is null)
    {
        <p>Loading...</p>
    }
    else
    {
        if (_categoryItems.Length == 0)
        {
            <NoItemMessage 
                ActionText="Don't worry, you can create an announcement?" 
                ButtonText="Create announcement" 
                ActionLink="/createannouncement" />
        }
        else
        {
            <div class="item-container">
                @foreach (var item in _categoryItems)
                {
                    <a href="/items/@item.Id">
                        <article class="card">
                            <div class="card-header">
                                <img src=@item.ImageUrl alt=@item.Name />
                            </div>
                            <div class="card-body flex">
                                <h3 class="card-title">
                                    @item.Name
                                </h3>
                                <p class="price">@item.Price.ToString("N0") FCFA</p>
                                <div class="item-category">
                                    <span>@item.Category</span>
                                </div>
                                <div class="details">
                                    <p class="location">
                                        <i class="fa-solid fa-location-dot icon--primary"></i>
                                        <span>@item.Location</span>
                                    </p>
                                    @* <p class="seller">
                            <i class="fa-solid fa-user icon--warning"></i><span>@item.Seller</span>
                            </p> *@
                                </div>
                            </div>
                        </article>

                    </a>
                }
            </div>
        }
    }
   
</section>


@code {
    [Parameter]
    public int? Id { get; set; }

    private ItemSummary[] _categoryItems = [];
    private Category? _category;

    protected override void OnInitialized(){}

    protected async override Task OnParametersSetAsync()
    {
        if (Id is null)
        {
            return;
        }
        _categoryItems = await ItemsClient.GetItemByCategoryAsync(Id.Value);
        Array.Sort(_categoryItems, new ItemIdComparer());

        _category = await CategoriesClient.GetCategoryAsync(Id.Value);
    }

}
