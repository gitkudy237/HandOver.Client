@page "/announcements"

@inject NavigationManager NavigationManager
@inject AnnouncementsClient AnnouncementsClient

<PageTitle>HandOver | Announcements</PageTitle>

<div class="main-content">
    <div class="header-container">
        <h2>Announcements</h2>
        <a href="/createannouncement">
            <button class="btn btn--primary">Create new</button>
        </a>

    </div>
    @if (_announcements is null)
    {
        <p>Loading...</p>
    }
    else
    {
        if (_announcements.Length == 0)
        {
            <NoItemMessage 
                ActionText="No announcements yet."
                ButtonText="Create announcement"
                ActionLink="/createannouncements"/>
        }
        else
        {
            <div class="item-container">
                @foreach (var announcement in _announcements)
                {
                    <article class="card">
                        <div class="card-header">
                            <img src="@announcement.ImageUrl" alt="@announcement.Name" />
                        </div>
                        <div class="card-body flex">
                            <h3 class="card-title">
                                @announcement.Name
                            </h3>
                            <p class="price">
                                <span>@announcement.MinPrice.ToString("N0")</span> -
                                <span>@announcement.MaxPrice.ToString("N0")</span> FCFA
                            </p>
                            <div class="item-category">
                                <span>@(announcement.Category ?? string.Empty)</span>
                            </div>
                            <div class="details">
                                <p class="location">
                                    <i class="fa-solid fa-location-dot icon--primary"></i>
                                    <span>@announcement.Location</span>
                                </p>
                                @* <p class="seller">
                    <i class="fa-solid fa-user-circle icon--warning"></i><span>@item.Seller</span>
                    </p> *@
                            </div>
                        </div>
                    </article>
                }
            </div>
            <AnnouncementModal Id="2"/>
        }
    }
</div>

@code {
    private AnnouncementSummary[]? _announcements;

    protected override async Task OnInitializedAsync()
    {
        _announcements = await AnnouncementsClient.GetAnnouncementsAsync();
    }
}
