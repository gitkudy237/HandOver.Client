@page "/"
@using HandOver.Client.Helpers
@rendermode InteractiveServer
@inject ItemsClient ItemsClient
@inject CategoriesClient CategoriesClient

<PageTitle>Home</PageTitle>
<section class="main-content" style="margin-top: 0;">
    <section class="hero section-container">
            <div class="overlay">
                <div class="hero-content">
                    <div class="hero-text">
                        <h2>Item announcements</h2>
                        <p>
                            See items people need. You may have them.
                        </p>
                    </div>
                    
                        <RadzenCarousel @ref=carousel @bind-SelectedIndex="@selectedIndex" Auto="true" AllowPaging="true"
                            Style="height: 500px; width: 70%;" PagerPosition="PagerPosition.Bottom" PagerOverlay="true">
                            <Items>
                                <RadzenCarouselItem>
                                    <RadzenImage Path="Images/basketball.jpg" class="rz-w-100" />
                                </RadzenCarouselItem>
                                <RadzenCarouselItem>
                                    <RadzenImage Path="Images/bicycle.jpg" class="rz-w-100" />
                                </RadzenCarouselItem>
                                <RadzenCarouselItem>
                                    <RadzenImage Path="Images/car.jpg" class="rz-w-100" />
                                </RadzenCarouselItem>
                                <RadzenCarouselItem>
                                    <RadzenImage Path="Images/clippers.jpg" class="rz-w-100" />
                                </RadzenCarouselItem>
                                <RadzenCarouselItem>
                                    <RadzenImage Path="Images/ps4.jpg" class="rz-w-100" />
                                </RadzenCarouselItem>
                                <RadzenCarouselItem>
                                    <RadzenImage Path="Images/tricycle.jpg" class="rz-w-100" />
                                </RadzenCarouselItem>
                    
                            </Items>
                        </RadzenCarousel>
                     
                    <a href="/announcements">
                        <button class="btn btn--primary">See all announcements</button>
                    </a>
                </div>
            </div>
</section>


@code {
    RadzenCarousel? carousel;
    int selectedIndex;
}



    @if (_items is null || _categories is null)
    {
        <p>Loading...</p>
    }
    else
    {
        <h2>All items</h2>
        foreach (var category in _categories)
        {
            var categoryItems = _items.Where(i => string.Equals(i.Category, category.Name)).ToArray();
            if (categoryItems.Length != 0)
            {
                
                <section class="category-preview">
                    <h3 class="category-heading">@category.Name</h3>
                    <div class="preview-container">
                        <div class="item-container">
                            @foreach (var item in categoryItems)
                            {
                                <a href="/items/@item.Id">
                                    <article class="card">
                                        <div class="card-header">
                                            <img src="@item.ImageUrl" alt="@item.Name" />
                                        </div>
                                        <div class="card-body flex">
                                            <h3 class="card-title">
                                                @item.Name
                                            </h3>
                                            <p class="price">@item.Price.ToString("N0") FCFA</p>
                                            <div class="card-badges">
                                                <span class="badge badge--verified">Verified</span>
                                                @if (item.CanBeDelivered)
                                                {
                                                    <span class="badge badge--shipping">Shipping</span>
                                                }
                                            </div>
                                            <div class="item-category">
                                                <span>@item.Category</span>
                                            </div>
                                            <div class="details">
                                                <p class="location">
                                                    <i class="fa-solid fa-location-dot icon--primary"></i>
                                                    <span>@item.Location</span>
                                                </p>
                                                <p class="post-date">
                                                    <i class="fa-solid fa-calendar icon--primary"></i>
                                                    <span>@item.PostedOn.ToShortDateString() at @item.PostedOn.ToShortTimeString()</span>
                                                </p>
                                                @* <p class="seller">
                                    <i class="fa-solid fa-user-circle icon--warning"></i><span>@item.Seller</span>
                                    </p> *@
                                            </div>
                                        </div>
                                    </article>
                                </a>
                            }
                        </div>
                        <a href="/category/@category.Id" class="btn btn--primary">View more</a>
                    </div>
                </section>
            }
            
        }
        
        if (_items.Length == 0)
        {
            <NoItemMessage 
                ActionText="Don't worry, you can create an announcement?"
                ButtonText="Create announcement"
            ActionLink="/createannouncement" />
        }
        else
        {
            
        }
    }
   
</section>

@code
{
    private string _title  = string.Empty;
    private ItemSummary[]? _items;
    private Category[]? _categories;

    protected override async Task OnInitializedAsync()
    {
        _categories = await CategoriesClient.GetCategoriesAsync();
        _items = await ItemsClient.GetItemsAsync();
        Array.Sort(_items, new ItemIdComparer());
    }
}