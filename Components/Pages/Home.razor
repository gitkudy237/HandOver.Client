@page "/"
@using HandOver.Client.Helpers
@rendermode InteractiveServer
@inject ItemsClient ItemsClient

<PageTitle>Home</PageTitle>
<section class="main-content">

<RadzenStack class="rz-p-0 rz-p-md-12">
    
    <RadzenCarousel @ref=carousel @bind-SelectedIndex="@selectedIndex" Auto="true" AllowPaging="true"
        Style="height: 300px; width: 70%;" PagerPosition="PagerPosition.Bottom" PagerOverlay="true">
        <Items>
            <RadzenCarouselItem>
                <RadzenImage Path="Images/basketball.jpg" class="rz-w-100" />
            </RadzenCarouselItem>
            <RadzenCarouselItem>
                <RadzenImage Path="Images/bicycle.jpg" class="rz-w-100" />
            </RadzenCarouselItem>
            <RadzenCarouselItem>
                <RadzenImage Path="Images/car.jpg" class="rz-w-100" />
            </RadzenCarouselItem>
            <RadzenCarouselItem>
                <RadzenImage Path="Images/clippers.jpg" class="rz-w-100" />
            </RadzenCarouselItem>
            <RadzenCarouselItem>
                <RadzenImage Path="Images/ps4.jpg" class="rz-w-100" />
            </RadzenCarouselItem>
            <RadzenCarouselItem>
                <RadzenImage Path="Images/tricyle.jpg" class="rz-w-100" />
            </RadzenCarouselItem>
            
        </Items>
    </RadzenCarousel>
</RadzenStack>

@code {
    RadzenCarousel carousel;
    bool allowPaging = true;
    bool pagerOverlay = true;
    PagerPosition pagerPosition = PagerPosition.Bottom;

    int selectedIndex;
}


<RadzenButton Click="@ButtonClicked" Text="Hi"></RadzenButton>
@code {
  void ButtonClicked()
  {
    _title = "Changed the title";
  }
}
    <h2>@_title</h2>
    @if (_items is null)
    {
        <p>Loading...</p>
    }
    else
    {
        if (_items.Length == 0)
        {
            <NoItemMessage 
                ActionText="Don't worry, you can create an announcement?"
                ButtonText="Create announcement"
            ActionLink="/createannouncement" />
        }
        else
        {
            <div class="item-container">
                @foreach (var item in _items)
                {
                    <a href="/items/@item.Id">
                        <article class="card">
                            <div class="card-header">
                                <img src="@item.ImageUrl" alt="@item.Name" />
                            </div>
                            <div class="card-body flex">
                                <h3 class="card-title">
                                    @item.Name
                                </h3>
                                <p class="price">@item.Price.ToString("N0") FCFA</p>
                                <div class="item-category">
                                    <span>@item.Category</span>
                                </div>
                                <div class="details">
                                    <p class="location">
                                        <i class="fa-solid fa-location-dot icon--primary"></i>
                                        <span>@item.Location</span>
                                    </p>
                                    @* <p class="seller">
                        <i class="fa-solid fa-user-circle icon--warning"></i><span>@item.Seller</span>
                        </p> *@
                                </div>
                            </div>
                        </article>
                    </a>
                }
            </div>
        }
    }
   
</section>

@code
{
    private string _title  = string.Empty;
    private ItemSummary[]? _items;
    protected override async Task OnInitializedAsync()
    {
        _items = await ItemsClient.GetItemsAsync();
        Array.Sort(_items, new ItemIdComparer());
    }
}