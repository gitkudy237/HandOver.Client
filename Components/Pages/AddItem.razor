@page "/additem"
@page "/edit/{id:int}"

@inject UsersClient UsersClient
@inject ItemsConditionsClient ItemsConditionsClient
@inject CategoriesClient CategoriesClient
@inject ItemsClient ItemsClient
@inject NavigationManager NavigationManager

<PageTitle>@_heading</PageTitle>

<div class="main-content">
    <h2>@_heading</h2>
    @if (_categories is null ||
    _users is null ||
    _conditions is null)
    {
        <p>Loading...</p>
    }
    else
    {
        <EditForm class="form" Model="@_item" FormName="addItem" OnSubmit="HandleSubmit">
            <h3>@_title</h3>
            <div>
                <label for="name">Item name:</label>
                <InputText class="input" type="text" id="name" placeholder="Enter item name..." @bind-Value="_item.Name" />
            </div>
            @* This is momentary *@
            <div>
                <label for="image">Image url:</label>
                <InputText class="input" type="text" id="image" placeholder="Enter Image url..."
                    @bind-Value="_item.ImageUrl" />
            </div>
            <div>
                <label for="location">Location:</label>
                <InputText class="input" type="text" id="location" placeholder="Enter location..."
                    @bind-Value="_item.Location" />
            </div>
            <div>
                <label for="category">Category:</label>
                <InputSelect type="text" id="category" @bind-Value="_item.CategoryId">
                    <option value="">Select category</option>
                    @foreach (var category in _categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </InputSelect>
            </div>
            <div style="margin-bottom: 15px;">
                <label for="">Item condition:</label>
                <div class="radio-container">
                    <InputRadioGroup @bind-Value=_item.ConditionId>
                        @foreach (var condition in _conditions)
                        {
                            <InputRadio Value="@condition.Id" id="@condition.Id" />
                            <label for="@condition.Id">@condition.Condition</label>
                        }
                    </InputRadioGroup>
                </div>
            </div>
            <div>
                <label for="price">Price:</label>
                <InputNumber class="input" id="price" @bind-Value="_item.Price" />
            </div>
            
            <div>
                <label for="description">Description:</label>
                <InputTextArea class="input" id="description" @bind-Value="_item.Description" />
            </div>

            <input class="btn btn--block btn--primary" type="submit" value="@_actionText" />
        </EditForm>
    }
</div>



@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private ItemDetails? _item { get; set; }


    private List<User> _users = new();
    private Category[]? _categories;
    private ItemCondition[]? _conditions;
    @* private User _seller = null!; *@
    private DateTime _postedOn;
    private int _sellerId;
    private string _title = "Add New Item";
    private string _heading = "Add new";
    private string _actionText = "Submit";

    protected override void OnInitialized()
    {
        _users = UsersClient.GetUsers();
        _categories = CategoriesClient.GetCategories();
        _conditions = ItemsConditionsClient.GetItemsConditions();



        // For now the seller is generated randomly from the list of users
    }

    protected override void OnParametersSet()
    {
        // if item has been submitted
        if (_item is not null)
        {
            return;
        }

        // if item exists
        if (Id is not null)
        {
            _item = ItemsClient.GetItemDetails(Id.Value);
            ArgumentNullException.ThrowIfNull(_item);

            _postedOn = _item.PostedOn;
            _sellerId = _item.SellerId;
            _heading = "Edit item";
            _title = $"Edit {_item.Name}";
            _actionText = "Confirm";
        }

        //We are creating the game
        else
        {
            @* _seller = _users[RandomNumber(_users.Count)]; *@
            _item = new()
                {
                    Name = string.Empty,
                    Location = string.Empty,
                    PostedOn = DateTime.UtcNow,
                };
        }
    }

    public int RandomNumber(int max)
    {
        Random random = new();
        return random.Next(max);
    }

    public void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(_item);

        if (Id is null)
        {
            _item.SellerId = 1;
            _item.PostedOn = DateTime.UtcNow;
            ItemsClient.AddItem(_item);
        }
        else
        {
            _item.Id = Id.Value;
            _item.PostedOn = _postedOn;
            _item.SellerId = 1;
            ItemsClient.UpdateItem(_item);
        }

        NavigationManager.NavigateTo("/");
    }
}
